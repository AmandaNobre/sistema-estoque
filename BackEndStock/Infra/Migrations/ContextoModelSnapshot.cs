// <auto-generated />
using System;
using Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Api.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Models.Fornecedores", b =>
                {
                    b.Property<Guid>("Id_Fornecedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id_Fornecedor");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("Domain.Models.Produtos", b =>
                {
                    b.Property<Guid>("Id_Produto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FornecedoresId_Fornecedor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_Fornecedor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Qtd")
                        .HasColumnType("int");

                    b.HasKey("Id_Produto");

                    b.HasIndex("FornecedoresId_Fornecedor");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Domain.Models.Produtos", b =>
                {
                    b.HasOne("Domain.Models.Fornecedores", "Fornecedores")
                        .WithMany()
                        .HasForeignKey("FornecedoresId_Fornecedor");

                    b.Navigation("Fornecedores");
                });
#pragma warning restore 612, 618
        }
    }
}
